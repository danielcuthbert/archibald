var searchIndex = JSON.parse('{\
"archibald":{"doc":"","t":[0,0,5,0,3,11,11,11,11,11,11,11,11,12,11,11,11,2,2,2,2,2,0,0,0,0,0,0,13,13,13,13,13,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,13,13,13,13,3,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,13,4,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,11,11,11,11,11,11,12,5,11,12,11,12,11,11,11,11,3,12,11,11,11,11,11,11,11,12,12,11,11,11,13,13,13,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,3,8,12,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11],"n":["archibald_handler","http","main","server","ArchibaldHandler","borrow","borrow_mut","from","handle_bad_request","handle_request","into","new","read_file","static_path","try_from","try_into","type_id","ParseError","QueryString","Response","StatusCode","ValueofQueryString","errors","methods","query_string","requests","response","statuscodes","InvalidBody","InvalidEncoding","InvalidHeader","InvalidMethod","InvalidProtocol","InvalidRequest","InvalidVersion","NotFound","ParseError","borrow","borrow_mut","clone","clone_into","cmp","description","eq","fmt","fmt","from","from","from","into","partial_cmp","provide","to_owned","to_string","try_from","try_into","type_id","Allowedmethods","CONNECT","DELETE","GET","HEAD","MethodError","OPTIONS","PATCH","POST","PUT","TRACE","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","eq","fmt","from","from","from_str","into","into","partial_cmp","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Multiple","QueryString","Single","Value","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","data","eq","fmt","fmt","from","from","from","hash","into","into","partial_cmp","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","0","0","Request","borrow","borrow_mut","fmt","from","into","method","method","parse_request","path","path","query_string","query_string","try_from","try_from","try_into","type_id","Response","body","borrow","borrow_mut","fmt","from","into","new","send","status_code","statusmessage","try_from","try_into","type_id","BadRequest","FORBIDDEN","IAmATeapot","InternalServerError","JollyGood","NotFound","StatusCode","borrow","borrow_mut","clone","clone_into","fmt","fmt","from","http_status_reason_phrase","into","into","to_owned","to_string","try_from","try_into","type_id","archibaldserver","Server","ServerHandler","address","borrow","borrow_mut","clone","clone_into","cmp","eq","fmt","from","handle_bad_request","handle_request","into","new","partial_cmp","run","to_owned","try_from","try_into","type_id"],"q":["archibald","","","","archibald::archibald_handler","","","","","","","","","","","","","archibald::http","","","","","","","","","","","archibald::http::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","archibald::http::methods","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","archibald::http::query_string","","","","","","","","","","","","","","","","","","","","","","","","","","","","","archibald::http::query_string::Value","","archibald::http::requests","","","","","","","","","","","","","","","","","archibald::http::response","","","","","","","","","","","","","","archibald::http::statuscodes","","","","","","","","","","","","","","","","","","","","","","archibald::server","archibald::server::archibaldserver","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","this is the main handler module This is for the …","","","Returns the argument unchanged.","","This handles the request","Calls <code>U::from(self)</code>.","","This is where we could introduce an ugly vulnerability …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","This is the address we’re listening on and it is stored …","","","","","","","","Returns the argument unchanged.","This is the error handler for the server. It will take a …","This is the main handler for the server. It will take a …","Calls <code>U::from(self)</code>.","We need an implementation block to hold the implementation …","","","","","",""],"i":[0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,18,18,18,18,0,18,18,18,18,18,16,18,16,18,18,18,18,18,18,16,18,18,16,18,18,18,16,18,16,18,16,18,19,0,19,0,20,19,20,19,19,19,19,20,19,20,19,20,20,19,19,20,19,19,19,20,19,20,19,20,19,26,27,0,4,4,4,4,4,4,4,0,4,4,4,4,4,4,4,4,0,3,3,3,3,3,3,3,3,3,3,3,3,3,21,21,21,21,21,21,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,0,0,0,24,24,24,24,24,24,24,24,24,25,25,24,24,24,24,24,24,24,24],"f":[0,0,[[]],0,0,[[]],[[]],[[]],[[1,2],3],[[1,4],3],[[]],[[[6,[5]]],1],[[1,7],[[8,[5]]]],0,[[],9],[[],9],[[],10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[2,2],[[]],[[2,2],11],[2,7],[[2,2],12],[[2,13],14],[[2,13],14],[15,2],[16,2],[[]],[[]],[[2,2],[[8,[11]]]],[17],[[]],[[],5],[[],9],[[],9],[[],10],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[18,18],[[]],[[18,18],11],[[18,18],12],[[18,13],14],[[]],[[]],[7,[[9,[18]]]],[[]],[[]],[[18,18],[[8,[11]]]],[[]],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],0,0,0,0,[[]],[[]],[[]],[[]],[19,19],[[]],[[19,19],11],0,[[19,19],12],[[20,13],14],[[19,13],14],[7,20],[[]],[[]],[19],[[]],[[]],[[19,19],[[8,[11]]]],[[]],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],0,0,0,[[]],[[]],[[4,13],14],[[]],[[]],[4,18],0,[7,8],[4,7],0,[4,[[8,[20]]]],0,[[],[[9,[4]]]],[[],9],[[],9],[[],10],0,0,[[]],[[]],[[3,13],14],[[]],[[]],[[21,[8,[5]]],3],[3,22],0,0,[[],9],[[],9],[[],10],0,0,0,0,0,0,0,[[]],[[]],[21,21],[[]],[[21,13],14],[[21,13],14],[[]],[21,7],[[]],[21,23],[[]],[[],5],[[],9],[[],9],[[],10],0,0,0,0,[[]],[[]],[24,24],[[]],[[24,24],11],[[24,24],12],[[24,13],14],[[]],[2,3],[4,3],[[]],[[[6,[5]]],24],[[24,24],[[8,[11]]]],[[24,25]],[[]],[[],9],[[],9],[[],10]],"p":[[3,"ArchibaldHandler"],[4,"ParseError"],[3,"Response"],[3,"Request"],[3,"String"],[8,"Into"],[15,"str"],[4,"Option"],[4,"Result"],[3,"TypeId"],[4,"Ordering"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Utf8Error"],[3,"MethodError"],[3,"Demand"],[4,"Allowedmethods"],[4,"Value"],[3,"QueryString"],[4,"StatusCode"],[6,"Result"],[15,"u16"],[3,"Server"],[8,"ServerHandler"],[13,"Single"],[13,"Multiple"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
